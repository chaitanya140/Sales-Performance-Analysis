CREATE TABLE "mytable" (
  "-- Use the database" text
);

INSERT INTO "mytable" ("-- Use the database")
VALUES
('USE db4;'),
('#1. Display all records from sampledataset'),
('SELECT * FROM db4.sampledataset;'),
('#2. Display all records from numerics table'),
('SELECT * FROM db4.numerics;'),
('#3. Count the Total Revenue from sampledataset table.'),
('SELECT COUNT(TotalRevenue) FROM sampledataset;'),
('#4. Find the Total Revenue from sampledataset table.'),
('SELECT SUM(TotalRevenue) FROM sampledataset;'),
('#5. Find the Total Cost from sampledataset table.'),
('SELECT SUM(TotalCost) FROM sampledataset;'),
('#6. Print all the records of Total Revenue by Year.'),
('CREATE VIEW Total_Revenue_year AS'),
('SELECT SUM(TotalRevenue) FROM sampledataset'),
('WHERE OrderDate BETWEEN ''01/06/2014'' AND ''31/12/2014'';'),
('#7. Display the Total Revenue of the Year.'),
('SELECT * FROM Total_Revenue_year;'),
('#8. Find out the Total Cost of Company.'),
('CREATE VIEW Total_Cost_Company AS'),
('SELECT SUM(TotalCost) FROM sampledataset;'),
('# Display the Total Cost of the Company.'),
('SELECT * FROM Total_Cost_Company;'),
('#9. Print all the records of Total Cost by Year.'),
('CREATE VIEW Company_Per_Year AS'),
('SELECT SUM(TotalCost) FROM sampledataset'),
('WHERE OrderDate BETWEEN ''01/01/2014'' AND ''31/12/2014'';'),
('# Display the Total Cost of the Company Per Year.'),
('SELECT * FROM Company_Per_Year;'),
('#10. Find out the Total Profit of Company.'),
('CREATE VIEW ProfitCompany AS'),
('SELECT SUM(TotalProfit) FROM sampledataset;'),
('# Display the Total Profit of the Company.'),
('SELECT * FROM ProfitCompany;'),
('#11. Find out all the records of the first five unit price.'),
('CREATE VIEW Five_Unit_Price AS'),
('SELECT UnitPrice FROM sampledataset LIMIT 5;'),
('# Display the records of the First Five Unit Price.'),
('SELECT * FROM Five_Unit_Price;'),
('#12. Find out all the records of the first five unit cost.'),
('CREATE VIEW Five_Unit_Cost AS'),
('SELECT UnitCost FROM sampledataset LIMIT 5;'),
('# Display the records of the First Five Unit Cost.'),
('SELECT * FROM Five_Unit_Cost;'),
('#13. Print all the records of Total Units Sold by Year.'),
('CREATE VIEW UnitsSoldYear AS'),
('SELECT SUM(UnitsSold) FROM sampledataset'),
('WHERE ShipDate BETWEEN ''01/01/2015'' AND ''31/12/2015'';'),
('# Display the Units Sold Per Year.'),
('SELECT * FROM UnitsSoldYear;'),
('#14. Find the record of Highest Sold Item.'),
('CREATE VIEW highest_sold AS'),
('SELECT MAX(ItemType) AS max_type FROM sampledataset;'),
('# Display the Highest Sold Item.'),
('SELECT * FROM highest_sold;'),
('#15. Find the record of Lowest Sold Item.'),
('CREATE VIEW lowest_sold AS'),
('SELECT MIN(ItemType) AS min_type FROM sampledataset;'),
('# Display the Lowest Sold Item.'),
('SELECT * FROM lowest_sold;'),
('#16. Print the record from sampledataset table where order id is ''161442649''.'),
('CREATE VIEW All_Records AS'),
('SELECT * FROM sampledataset WHERE OrderID = 161442649;'),
('# Display the record where order id is ''161442649''.'),
('SELECT * FROM All_Records;'),
('#17. Find the Maximum and Minimum Order Priority record from sampledataset table.'),
('CREATE VIEW MaxMin_OrderPriority AS'),
('SELECT MAX(OrderPriority) AS max_priority'),
('# Display the record of MaxMin Order Priority.'),
('SELECT * FROM MaxMin_OrderPriority;'),
('#18. Find the records from sampledataset table where ItemType is ''Vegetables'' and salesChannel is ''Online''.'),
('CREATE VIEW Sales_Item AS'),
('SELECT * FROM sampledataset WHERE ItemType = ''Vegetables'' OR SalesChannel = ''Online'';'),
('# Display the record where ItemType is ''Vegetables'' and salesChannel is ''Online''.'),
('SELECT * FROM Sales_Item;'),
('#19. Find out the records from the sampledataset table where Country name is ''Japan'' and ''Montenegro'' using IN Operator.'),
('CREATE VIEW Country_Name AS'),
('SELECT * FROM sampledataset WHERE Country IN (''Japan'''),
('# Display the records where Country name is ''Japan'' and ''Montenegro''.'),
('SELECT * FROM Country_Name;'),
('#20. Print all the records where Region Name is not ''North America'' using NOT Operator.'),
('CREATE VIEW Not_RegionName AS'),
('SELECT * FROM sampledataset WHERE NOT Region = ''North America'';'),
('# Display the records where Region Name is not ''North America''.'),
('SELECT * FROM Not_RegionName;'),
('#21. What are the regions where the order priority is ''M''.'),
('CREATE VIEW Order_Priority_Regions AS'),
('SELECT Region FROM sampledataset WHERE OrderPriority = ANY'),
('(SELECT OrderPriority FROM sampledataset WHERE OrderPriority = ''M'');'),
('# Display the Order Priority Regions where the order priority is ''M''.'),
('SELECT * FROM Order_Priority_Regions;'),
('#22. What are the item types that exist where units sold are greater than 5000.'),
('CREATE VIEW More_Item_Type AS'),
('SELECT ItemType FROM sampledataset WHERE EXISTS'),
('(SELECT SalesChannel FROM sampledataset WHERE UnitsSold > 5000);'),
('# Display the Item Type where units sold are greater than 5000.'),
('SELECT * FROM More_Item_Type;'),
('#23. Which items have names starting with the letter ''B''.'),
('CREATE VIEW Item_Type AS'),
('SELECT * FROM sampledataset WHERE ItemType LIKE ''B%'';'),
('# Display the Item Type starting with the letter ''B''.'),
('SELECT * FROM Item_Type;'),
('#24. What is the total sum of Unit Prices in the dataset.'),
('CREATE VIEW UnitPrice AS'),
('SELECT SUM(UnitPrice) FROM sampledataset;'),
('# Display the total sum of Unit Price.'),
('SELECT * FROM UnitPrice;'),
('#25. What is the average Unit Price in the dataset.'),
('CREATE VIEW AVG_UnitPrice AS'),
('SELECT AVG(UnitPrice) FROM sampledataset;'),
('# Display the Average Unit Price.'),
('SELECT * FROM AVG_UnitPrice;'),
('#26. How many Unit Prices are recorded in the dataset.'),
('CREATE VIEW COUNT_UnitPrice AS'),
('SELECT COUNT(UnitPrice) FROM sampledataset;'),
('# Display the total number of Unit Prices.'),
('SELECT * FROM COUNT_UnitPrice;'),
('#27. How does the dataset look when ordered by Total Cost.'),
('CREATE VIEW Order_TotalCost AS'),
('SELECT * FROM sampledataset ORDER BY TotalCost;'),
('# Display the Order Total Cost.'),
('SELECT * FROM Order_TotalCost;'),
('#28. What is the sum of Total Cost grouped by Total Revenue.'),
('CREATE VIEW Group_Total_Cost AS'),
('SELECT SUM(TotalCost)'),
('# Display the sum of Total Cost grouped by Total Revenue.'),
('SELECT * FROM Group_Total_Cost;');
